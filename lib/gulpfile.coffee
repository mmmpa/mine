gulp = require 'gulp'

browserify = require 'browserify'
coffee = require 'gulp-coffee'
compass = require 'gulp-compass'
jade = require 'gulp-jade'
sass = require 'gulp-ruby-sass'
streamify = require 'gulp-streamify'

concat = require 'gulp-concat'
minify = require 'gulp-minify-css'
plumber = require 'gulp-plumber'
rename = require 'gulp-rename'
source = require 'vinyl-source-stream'
uglify = require 'gulp-uglify'

argv = require('yargs').argv
spawn = require('child_process').spawn

path = require 'path'
_ = require 'lodash'

rootPath = path.join(__dirname, '../')
tempPath = path.join(__dirname, 'temp')
publicJsPath = path.join(rootPath, 'public/js')

onError = (err)->
  console.log(err.toString())
  @emit("end")

gulp.task 'default', ->
  p = undefined

  spawnChildren = (e) ->
    if p
      p.kill()
    p = spawn('gulp', ['watcher', 'build'], stdio: 'inherit')

  gulp.watch 'gulpfile.coffee', spawnChildren
  spawnChildren null

gulp.task 'build', ->
  appWatch = path.join(rootPath, 'src/app/**/*.coffee')
  src = path.join(rootPath, 'src/app/index.coffee')

  gulp.watch(appWatch).on 'change', (e) ->
    browserify
      entries: src
      extensions: ['.coffee']
      debug: true
    .transform 'coffeeify'
    .bundle()
    .on('error', onError)
    .pipe source('dummy.js')
    .pipe streamify(uglify())
    .pipe rename('build.min.js')
    .pipe gulp.dest(publicJsPath)

gulp.task 'vendor', ->
  browserify
    entries: ['./vendor.coffee']
    extensions: ['.coffee']
    debug: true
  .transform 'coffeeify'
  .plugin 'licensify'
  .bundle()
  .on('error', onError)
  .pipe source('vendor.js')
  .pipe streamify(uglify
      output:
        comments: /generated by licensify/
  )
  .pipe rename('vendor.min.js')
  .pipe gulp.dest(publicJsPath)

gulp.task 'watcher', ->
  sassWatch = path.join(rootPath, 'src/sass/**/*.sass')
  coffeeWatch = path.join(rootPath, 'src/coffee/**/*.coffee')
  jadeWatch = path.join(rootPath, 'src/jade/**/*.jade')

  split = (filePath)->
    _(path.relative(rootPath, filePath).split('/')).drop(2).dropRight(1).value()

  genPath = (dirs, filePath)->
    dirs.concat(split(filePath)).join('/')

  gulp.watch(sassWatch).on 'change', (e) ->
    dest = genPath(['public', 'css'], e.path)

    gulp
    .src e.path
    .pipe plumber()
    .pipe sass(compass: true)
    .pipe minify(keepBreaks: false)
    .pipe gulp.dest(path.join(rootPath, dest))

  gulp.watch(coffeeWatch).on 'change', (e) ->
    dest = genPath(['public', 'js'], e.path)

    gulp
    .src e.path
    .pipe plumber()
    .pipe coffee()
    .pipe gulp.dest(path.join(rootPath, dest))

  gulp.watch(jadeWatch).on 'change', (e) ->
    dest = genPath(['public'], e.path)

    gulp
    .src e.path
    .pipe plumber()
    .pipe jade()
    .pipe gulp.dest(path.join(rootPath, dest))
